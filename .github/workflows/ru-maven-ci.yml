name: Maven Build and GHCR Push

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Upload JAR Artifact
        uses: actions/upload-artifact@v4
        with:
          name: springboot-app-jar
          path: target/*.jar

      - name: Log in to GitHub Container Registry (GHCR)
        run: echo "${{ secrets.GHCR_PAT }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Set Environment Variables
        run: |
          echo "REPO_OWNER=$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
          echo "SOURCE_REGISTRY=ghcr.io" >> $GITHUB_ENV
          echo "SOURCE_IMAGE=$REPO_OWNER/sample-springboot-app" >> $GITHUB_ENV
          echo "SOURCE_IMAGE_TAG=latest" >> $GITHUB_ENV

      - name: Debug Environment Variables
        run: |
          echo "SOURCE_REGISTRY=${SOURCE_REGISTRY}"
          echo "SOURCE_IMAGE=${SOURCE_IMAGE}"
          echo "SOURCE_IMAGE_TAG=${SOURCE_IMAGE_TAG}"

      - name: Build and Tag Docker Image
        run: |
          docker build \
            --build-arg SOURCE_REGISTRY=$SOURCE_REGISTRY \
            --build-arg SOURCE_IMAGE=$SOURCE_IMAGE \
            --build-arg SOURCE_IMAGE_TAG=$SOURCE_IMAGE_TAG \
            -t ghcr.io/$REPO_OWNER/sample-springboot-app:latest .

      - name: Push Docker Image to GHCR
        run: |
          docker push ghcr.io/$REPO_OWNER/sample-springboot-app:latest
          docker push ghcr.io/$REPO_OWNER/sample-springboot-app:${{ github.run_number }}

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download JAR Artifact (Optional)
        uses: actions/download-artifact@v4
        with:
          name: springboot-app-jar
          path: target/

      - name: Trigger Harness Deployment
        run: |
          curl -X POST "https://app.harness.io/gateway/pipeline/api/v1/execution" \
          -H "x-api-key: ${{ secrets.HARNESS_NG_API_TOKEN }}" \
          -H "Content-Type: application/json" \
          -d '{
                "orgIdentifier": "default",
                "projectIdentifier": "GHCR_Demo_Project",
                "pipelineIdentifier": "ru-harness-ng-k8s-deploy",
                "inputSetReferences": [],
                "runtimeInput": {
                  "artifactTag": "latest"
                }
              }'
